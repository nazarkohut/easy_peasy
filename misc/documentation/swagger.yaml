---
openapi: 3.0.1
info:
  title: EasyPeasy
  description: Documentation for webapp called EasyPeasy. This web application helps Ukrainian students with preparation for math exams, and helps people to improve their math.
  version: "0.1"
servers:
- url: http://127.0.0.1:8000
paths:
  /auth/users/resend_activation/:
    post:
      tags:
      - auth
      description: Resends activation email to newly registered user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_resend_activation_body'
            examples:
              empty_body:
                value: |-
                  {
                  }
              wrong_email:
                value: |-
                  {
                      "email" : "email"
                  }
      responses:
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
              examples:
                empty_body:
                  value: '{"email":["This field is required."]}'
                wrong_email:
                  value: '{"email":["Enter a valid email address."]}'
        "204":
          description: No content
      servers:
      - url: http://127.0.0.1:8000
    servers:
    - url: http://127.0.0.1:8000
  /auth/users/refresh/:
    post:
      tags:
      - auth
      description: Generates new access and refresh tokens. It is needed when access token expires.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_refresh_body'
            examples:
              success:
                value: "{\n    \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1MDgyMDE4MSwianRpIjoiZWExZGE4MzA1YWYwNGMzZDg1NzQ5NDU2YjE2NTgwZTIiLCJ1c2VyX2lkIjozfQ.XJDoYnFGhnawf6Pa-4o3VTpmefHpb0QGyYEe4R8t5O4\"\n    \n}"
              blacklisted:
                value: "{\n    \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1MDgyMDE4MSwianRpIjoiZWExZGE4MzA1YWYwNGMzZDg1NzQ5NDU2YjE2NTgwZTIiLCJ1c2VyX2lkIjozfQ.XJDoYnFGhnawf6Pa-4o3VTpmefHpb0QGyYEe4R8t5O4\"\n    \n}"
              wrong_token:
                value: "{\n    \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicVmcmVzaCIsImV4cCI6MTY1MDgyMDE4MSwianRpIjoiZWExZGE4MzA1YWYwNGMzZDg1NzQ5NDU2YjE2NTgwZTIiLCJ1c2VyX2lkIjozfQ.XJDoYnFGhnawf6Pa-4o3VTpmefHpb0QGyYEe4R8t5O4\"\n    \n}"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              examples:
                access:
                  value: '{"access":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjQ5NTI3ODQ5LCJqdGkiOiJlZTVkNTA4Y2Q3Y2M0YzBiYTJhYWVmMzMzZWZlOTAwMyIsInVzZXJfaWQiOjN9.m8ZizTyR4EdXXvl8GRW7NjYzWcdTuxftFKIZNCObeTE","refresh":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1MDgyMDI0OSwianRpIjoiMTgwNmEzMTQxMjQ1NGFkYTgxMzA0ODMxNTcyMDBmYmUiLCJ1c2VyX2lkIjozfQ.jYshwkwNlafM8klu89jfQ9E5WfRPjvX7_lUqVjA9KJw"}'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
              examples:
                blacklisted:
                  value: '{"detail":"Token is blacklisted","code":"token_not_valid"}'
                wrong_token:
                  value: '{"detail":"Token is invalid or expired","code":"token_not_valid"}'
      servers:
      - url: http://127.0.0.1:8000
    servers:
    - url: http://127.0.0.1:8000
  /auth/users/activation/:
    post:
      tags:
      - auth
      description: Sends activation email to newly registered user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_activation_body'
            examples:
              empty_body:
                value: "{\n    \n}"
              wrong_values:
                value: |-
                  {
                      "uid": "MQ",
                      "token": "b3mk6s-8379324d955f90b912bae2df9d0ac5f9________"
                  }
              success:
                value: |-
                  {
                      "uid": "MQ",
                      "token": "b3mk6s-8379324d955f90b912bae2df9d0ac5f9"
                  }
      responses:
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
              examples:
                empty_body:
                  value: '{"uid":["This field is required."],"token":["This field is required."]}'
                wrong_values:
                  value: '{"token":["Invalid token for given user."]}'
        "204":
          description: No content
      servers:
      - url: http://127.0.0.1:8000
    servers:
    - url: http://127.0.0.1:8000
  /auth/users/:
    post:
      tags:
      - auth
      description: Register new user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_users_body'
            examples:
              wrong_email1:
                value: |-
                  {
                      "email": "tutahore@norwegischlerneninfo",
                      "first_name": "first_name",
                      "last_name": "last_name",
                      "username": "username",
                      "password": "password"
                  }
              wrong_email2:
                value: |-
                  {
                      "email": "tutahorenorwegischlernen.info",
                      "first_name": "first_name",
                      "last_name": "last_name",
                      "username": "username",
                      "password": "password"
                  }
              empty_body:
                value: "{\n    \n}"
              success:
                value: |-
                  {
                      "email": "tutahore@norwegischlernen.info",
                      "first_name": "first_name",
                      "last_name": "last_name",
                      "username": "username",
                      "password": "password"
                  }
              unique_username:
                value: |-
                  {
                      "email": "tutahore@norwegischlernen.info",
                      "first_name": "first_name",
                      "last_name": "last_name",
                      "username": "username",
                      "password": "password"
                  }
              unique_email:
                value: |-
                  {
                      "email": "tutahore@norwegischlernen.info",
                      "first_name": "first_name",
                      "last_name": "last_name",
                      "username": "username1",
                      "password": "password"
                  }
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
              examples:
                success:
                  value: '{"email":"tutahore@norwegischlernen.info","first_name":"first_name","last_name":"last_name","username":"username"}'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_2'
              examples:
                email_error1:
                  value: '{"non_field_errors":["Enter a valid email address."]}'
                eamil_error2:
                  value: '{"non_field_errors":["Email should contain ''@'' sign"]}'
                empty_body:
                  value: '{"email":["This field is required."],"first_name":["This field is required."],"last_name":["This field is required."],"username":["This field is required."],"password":["This field is required."]}'
                unique_username:
                  value: '{"username":["A user with that username already exists."]}'
                unique_email:
                  value: '{"non_field_errors":["User with this email already exist"]}'
      servers:
      - url: http://127.0.0.1:8000
    servers:
    - url: http://127.0.0.1:8000
  /auth/users/login/:
    post:
      tags:
      - auth
      description: Login user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_login_body'
            examples:
              empty_body:
                value: "{\n    \n}"
              success_username:
                value: |-
                  {
                      "username": "username",
                      "password": "password"
                  }
              success_email:
                value: |-
                  {
                      "email": "tutahore@norwegischlernen.info",
                      "password": "password"
                  }
              blank_email:
                value: |-
                  {
                      "email": "",
                      "password": "password"
                  }
              invalid_credentials:
                value: |-
                  {
                      "email": "tutahore@norwegischlernen.info",
                      "password": "pasrd"
                  }
              email_does_not_exist:
                value: |-
                  {
                      "email": "tutahore@norwegischlernen.inf",
                      "password": "password"
                  }
              username_does_not_exist:
                value: |-
                  {
                      "username": "username888",
                      "password": "password"
                  }
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              examples:
                username_success:
                  value: '{"refresh":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1MDgxNTMwMSwianRpIjoiMDNmYTRhOWRjZTE0NGQ4MmFmNGQyNWQxY2RmMTNhZDEiLCJ1c2VyX2lkIjozfQ.B94RDzRV3C03wAUUXoSpDPwQmI0JdP6D_696HVNPZsg","access":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjQ5NTIyOTAxLCJqdGkiOiI0NjEzNzNjMWE3NDQ0YjgwODUwMDAzYzExOWE2ODY3MiIsInVzZXJfaWQiOjN9.0RVGEK-dcwo6pWvM4zZNub7SLWATUSqYnizD3FpSRW0"}'
                email_success:
                  value: '{"refresh":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1MDgxNTMyMCwianRpIjoiOTBlMmRiNWY1ODllNDRjNmJhYTVmMTM3MWY5YmU4NTUiLCJ1c2VyX2lkIjozfQ.fE1VPJWK0F34DfY8rXr5NlNfOIzEWMa4pTDgPFPJVFk","access":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjQ5NTIyOTIwLCJqdGkiOiI2ZTBhOTAzZDcwYjI0N2MyYmUzNzgwODlkZjVkMDE4NCIsInVzZXJfaWQiOjN9.ZL8NQ5UWEBO9o0iqbu23QGSiPso-KqAye6_lBgOEZvM"}'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_3'
              examples:
                empty_body:
                  value: '{"username":["This field is required."],"password":["This field is required."]}'
                blank_email:
                  value: '{"email":["This field may not be blank."]}'
                invalid_credentials:
                  value: '{"non_field_errors":["Incorrect credentials."]}'
                email_does_not_exist:
                  value: '{"non_field_errors":["User with given email does not exist."]}'
                username_does_not_exist:
                  value: '{"non_field_errors":["User with given username does not exist."]}'
  /auth/users/logout/:
    post:
      tags:
        - auth
      description: Logout user by blacklisting refresh token.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_logout_body'
            examples:
              expired_token:
                value: |-
                  {
                     "refresh": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1MTE0NDMxMSwianRpIjoiM2I2Y2ViNDAzODE4NDg2ZjkwZDgwNWNjMTU5NWZhYmMiLCJ1c2VyX2lkIjozfQ.X_v8l5ukldywAl98GDCWqIsYoua8N9J5gz3Cloj5L0I",
                  }
              success:
                value: "{\n   \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1MTE0NDMxMSwianRpIjoiM2I2Y2ViNDAzODE4NDg2ZjkwZDgwNWNjMTU5NWZhYmMiLCJ1c2VyX2lkIjozfQ.X_v8l5ukldywAl98GDCWqIsYoua8N9J5gz3Cloj5L0I\"  \n}"
              invalid_token:
                value: "{\n    \"refresh\": \"invalid_refresh_token\"    \n}"
              blank_token:
                value: "{\n    \"refresh\": \"\"    \n}"
              empty_body:
                value: "{\n    \n}"
              another_user:
                value: '{"refresh": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1MTE1MDE0MSwianRpIjoiNDJmNTRkODNkMTIxNGU0NGFiNzNlMTEzMjM5OTI5NTIiLCJ1c2VyX2lkIjozfQ.KP2i_sFFeT5PiDu6Psa_TWSdeyE9bowVWzCWX79r83U"}'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              examples:
                success:
                  value: '{"message":"Success"}'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
              examples:
                invalid_token:
                  value: '{"message":"Token is invalid or expired"}'
                expired_token:
                  value: '{"message":"Token is invalid or expired"}'
                blank_token:
                  value: '{"refresh":["May not be blank"]}'
                empty_body:
                  value: '{"refresh":["This field is required"]}'
        "401":
          description: Permission denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
              examples:
                unauthorized:
                  value: '{"detail":"Authentication credentials were not provided."}'
                another_user:
                  value: '{"detail": "You do not have permission to logout another user"}'

  /auth/users/reset_password/:
    post:
      tags:
        - auth
      description: Sends email to user that does not remember his password.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_reset_password_body'
            examples:
              success:
                value: |-
                  {
                      "email": "email@gmail.com"
                  }
              invalid_email:
                value: |-
                  {
                      "email": "email@"
                  }
              blank_email:
                value: |-
                  {
                      "email": ""
                  }
              email_not_found:
                value: |-
                  {
                      "email": "email_that_does_not_exist@gmail.com"
                  }
      responses:
        "204":
          description: Is returned when everything works fine and email is send.
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
              examples:
                invalid_email:
                  value: '{"email":["Enter a valid email address."]}'
                blank_email:
                  value: '{"email":["This field may not be blank."]}'
                empty_body:
                  value: '{"email":["This field is required."]}'
                email_not_found:
                  value: '{"non_field_errors": ["User with given email does not exist."]}'
      servers:
      - url: http://127.0.0.1:8000
    servers:
    - url: http://127.0.0.1:8000
components:
  schemas:
    inline_response_400_3:
      type: object
      properties:
        password:
          type: array
          items:
            type: string
        non_field_errors:
          type: array
          items:
            type: string
        email:
          type: array
          items:
            type: string
        username:
          type: array
          items:
            type: string
    users_resend_activation_body:
      type: object
      properties:
        email:
          type: string
    users_login_body:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
        username:
          type: string
    users_activation_body:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
    inline_response_201:
      type: object
      properties:
        last_name:
          type: string
        first_name:
          type: string
        email:
          type: string
        username:
          type: string
    users_refresh_body:
      type: object
      properties:
        refresh:
          type: string
    inline_response_200:
      type: object
      properties:
        access:
          type: string
        refresh:
          type: string
    auth_users_body:
      type: object
      properties:
        password:
          type: string
        last_name:
          type: string
        first_name:
          type: string
        email:
          type: string
        username:
          type: string
    inline_response_401:
      type: object
      properties:
        code:
          type: string
        detail:
          type: string
    inline_response_400_2:
      type: object
      properties:
        password:
          type: array
          items:
            type: string
        non_field_errors:
          type: array
          items:
            type: string
        last_name:
          type: array
          items:
            type: string
        first_name:
          type: array
          items:
            type: string
        email:
          type: array
          items:
            type: string
        username:
          type: array
          items:
            type: string
    inline_response_400:
      type: object
      properties:
        email:
          type: array
          items:
            type: string
    inline_response_400_1:
      type: object
      properties:
        uid:
          type: array
          items:
            type: string
        token:
          type: array
          items:
            type: string
    users_logout_body:
      type: object
      properties:
        refresh:
          type: string
        message:
          type: string
    users_reset_password_body:
      type: object
      properties:
        email:
          type: string
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://yourauthurl.com
          scopes:
            scope_name: Enter your scopes here
